services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: picker-postgres
    environment:
      POSTGRES_DB: picker
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./samples:/samples:ro  # Mount samples directory as read-only
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d picker"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: picker-backend
    environment:
      DATABASE_URL: postgresql+psycopg://user:password@postgres:5432/picker
      IMAGE_ROOT: /samples
      MAX_IMAGE_MB: 8
    volumes:
      - ./samples:/samples:ro  # Mount samples directory as read-only
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: picker-frontend
    ports:
      - "5173:80"
    depends_on:
      - backend

  # Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: picker-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@picker.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data: